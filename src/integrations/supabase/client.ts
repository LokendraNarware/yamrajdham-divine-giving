// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dxdfgaymlhcqxjsuwhoi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR4ZGZnYXltbGhjcXhqc3V3aG9pIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg2NjA1NzYsImV4cCI6MjA3NDIzNjU3Nn0.nqFqNySt2GMN-LAqfDUiW-UtcpeF1iDAsF_T8SJeMSE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a singleton instance to prevent HMR issues
let supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

// Browser-safe client creation
const createSupabaseClient = () => {
  try {
    return createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: typeof window !== 'undefined' ? localStorage : undefined,
        persistSession: true,
        autoRefreshToken: true,
        detectSessionInUrl: true,
      },
      global: {
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
        },
      },
      db: {
        schema: 'public',
      },
      realtime: {
        params: {
          eventsPerSecond: 10,
        },
      },
    });
  } catch (error) {
    console.error('Failed to create Supabase client:', error);
    throw error;
  }
};

export const supabase = (() => {
  if (supabaseInstance) {
    return supabaseInstance;
  }

  try {
    supabaseInstance = createSupabaseClient();
    return supabaseInstance;
  } catch (error) {
    console.error('Failed to initialize Supabase client:', error);
    // Return a mock client to prevent crashes during HMR
    return {} as ReturnType<typeof createClient<Database>>;
  }
})();
